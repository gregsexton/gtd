(ns date-parser-tests
  (:use date-parser)
  (:use clojure.contrib.test-is)
  (import (java.util Calendar GregorianCalendar)))

(deftest absolute-absvals-return-true
  (is (true? (absolute? "2011-04-30")))
  (is (true? (absolute? "2011-04-30 14:32")))
  (is (true? (absolute? "2011-04-30 14:32:17")))
  (is (true? (absolute? "2011-04-30 02:32pm")))
  (is (true? (absolute? "2011-04-30 02:32 pm")))
  (is (true? (absolute? "2011-04-30 2:32 pm")))
  (is (true? (absolute? "2011-04-30 02:32:17pm")))
  (is (true? (absolute? "2011-04-30 02:32:17 pm")))
  (is (true? (absolute? "2011-04-30 2:32:17 pm")))
  (is (true? (absolute? "14:32")))
  (is (true? (absolute? "14:32:17")))
  (is (true? (absolute? "02:32pm")))
  (is (true? (absolute? "02:32 pm")))
  (is (true? (absolute? "2:32 pm")))
  (is (true? (absolute? "02:32:17pm")))
  (is (true? (absolute? "02:32:17 pm")))
  (is (true? (absolute? "2:32:17 pm"))))

(deftest absolute-relvals-return-false
  (is (false? (absolute? "now")))
  (is (false? (absolute? "-")))
  (is (false? (absolute? ".")))
  (is (false? (absolute? "")))
  (is (false? (absolute? "tomorrow")))
  (is (false? (absolute? "tomoro")))
  (is (false? (absolute? "1day")))
  (is (false? (absolute? "1 day")))
  (is (false? (absolute? "day")))
  (is (false? (absolute? "a day")))
  (is (false? (absolute? "1days")))
  (is (false? (absolute? "days1")))
  (is (false? (absolute? "3day")))
  (is (false? (absolute? "3days")))
  (is (false? (absolute? "day3")))
  (is (false? (absolute? "monday")))
  (is (false? (absolute? "next monday")))
  (is (false? (absolute? "7days")))
  (is (false? (absolute? "week")))
  (is (false? (absolute? "a week")))
  (is (false? (absolute? "next week")))
  (is (false? (absolute? "3week")))
  (is (false? (absolute? "3weeks")))
  (is (false? (absolute? "month")))
  (is (false? (absolute? "a month")))
  (is (false? (absolute? "next month")))
  (is (false? (absolute? "jan")))
  (is (false? (absolute? "january")))
  (is (false? (absolute? "year")))
  (is (false? (absolute? "a year")))
  (is (false? (absolute? "next year")))
  (is (false? (absolute? "2012")))
  (is (false? (absolute? "3seconds")))
  (is (false? (absolute? "3second")))
  (is (false? (absolute? "3secs")))
  (is (false? (absolute? "3sec")))
  (is (false? (absolute? "a second")))
  (is (false? (absolute? "second")))
  (is (false? (absolute? "sec")))
  (is (false? (absolute? "3minutes")))
  (is (false? (absolute? "3minute")))
  (is (false? (absolute? "3mins")))
  (is (false? (absolute? "3min")))
  (is (false? (absolute? "a minute")))
  (is (false? (absolute? "minute")))
  (is (false? (absolute? "min")))
  (is (false? (absolute? "3hours")))
  (is (false? (absolute? "3hour")))
  (is (false? (absolute? "3hr")))
  (is (false? (absolute? "3hrs")))
  (is (false? (absolute? "a hour")))
  (is (false? (absolute? "an hour")))
  (is (false? (absolute? "hour")))
  (is (false? (absolute? "hr"))))

(deftest get-date-absvals-return-correct-date
  (is (= (create-date 2011 04 30 14 32 0) (get-date "2011-04-30 14:32")))
  (is (= (create-date 2011 04 30 14 32 17) (get-date "2011-04-30 14:32:17")))
  (is (= (create-date 2011 04 30 14 32 0) (get-date "2011-04-30 02:32pm")))
  (is (= (create-date 2011 04 30 14 32 0) (get-date "2011-04-30 02:32 pm")))
  (is (= (create-date 2011 04 30 14 32 0) (get-date "2011-04-30 2:32 pm")))
  (is (= (create-date 2011 04 30 2 32 0) (get-date "2011-04-30 2:32 am")))
  (is (= (create-date 2011 04 30 14 32 17) (get-date "2011-04-30 02:32:17pm")))
  (is (= (create-date 2011 04 30 14 32 17) (get-date "2011-04-30 02:32:17 pm")))
  (is (= (create-date 2011 04 30 14 32 17) (get-date "2011-04-30 2:32:17 pm")))
  (is (= (create-date (get-year) (get-month) (get-day) 14 32 0) (get-date "14:32")))
  (is (= (create-date (get-year) (get-month) (get-day) 14 32 17) (get-date "14:32:17")))
  (is (= (create-date (get-year) (get-month) (get-day) 14 32 0) (get-date "02:32pm")))
  (is (= (create-date (get-year) (get-month) (get-day) 14 32 0) (get-date "02:32 pm")))
  (is (= (create-date (get-year) (get-month) (get-day) 14 32 0) (get-date "2:32 pm")))
  (is (= (create-date (get-year) (get-month) (get-day) 14 32 17) (get-date "02:32:17pm")))
  (is (= (create-date (get-year) (get-month) (get-day) 14 32 17) (get-date "02:32:17 pm")))
  (is (= (create-date (get-year) (get-month) (get-day) 14 32 17) (get-date "2:32:17 pm"))))

(deftest get-offset-unit-relvals-return-correct-unit
  (is (= Calendar/SECOND (get-offset-unit "now")))
  (is (= Calendar/SECOND (get-offset-unit "-")))
  (is (= Calendar/SECOND (get-offset-unit ".")))
  (is (= Calendar/SECOND (get-offset-unit "")))
  (is (= Calendar/DATE   (get-offset-unit "tomorrow")))
  (is (= Calendar/DATE   (get-offset-unit "tomoro")))
  (is (= Calendar/DATE   (get-offset-unit "1day")))
  (is (= Calendar/DATE   (get-offset-unit "1 day")))
  (is (= Calendar/DATE   (get-offset-unit "day")))
  (is (= Calendar/DATE   (get-offset-unit "a day")))
  (is (= Calendar/DATE   (get-offset-unit "1days")))
  (is (= Calendar/DATE   (get-offset-unit "days1")))
  (is (= Calendar/DATE   (get-offset-unit "2day")))
  (is (= Calendar/DATE   (get-offset-unit "2days")))
  (is (= Calendar/DATE   (get-offset-unit "day2")))
  (is (= Calendar/DATE   (get-offset-unit "monday")))
  (is (= Calendar/DATE   (get-offset-unit "next monday")))
  (is (= Calendar/DATE   (get-offset-unit "7days")))
  (is (= Calendar/DATE   (get-offset-unit "week")))
  (is (= Calendar/DATE   (get-offset-unit "a week")))
  (is (= Calendar/DATE   (get-offset-unit "next week")))
  (is (= Calendar/DATE   (get-offset-unit "2week")))
  (is (= Calendar/DATE   (get-offset-unit "2weeks")))
  (is (= Calendar/MONTH  (get-offset-unit "month")))
  (is (= Calendar/MONTH  (get-offset-unit "a month")))
  (is (= Calendar/MONTH  (get-offset-unit "next month")))
  (is (= Calendar/MONTH  (get-offset-unit "jan")))
  (is (= Calendar/MONTH  (get-offset-unit "january")))
  (is (= Calendar/MONTH  (get-offset-unit "year")))
  (is (= Calendar/YEAR   (get-offset-unit "a year")))
  (is (= Calendar/YEAR   (get-offset-unit "next year")))
  (is (= Calendar/YEAR   (get-offset-unit "2012")))
  (is (= Calendar/SECOND (get-offset-unit "2seconds")))
  (is (= Calendar/SECOND (get-offset-unit "2second")))
  (is (= Calendar/SECOND (get-offset-unit "2secs")))
  (is (= Calendar/SECOND (get-offset-unit "2sec")))
  (is (= Calendar/SECOND (get-offset-unit "a second")))
  (is (= Calendar/SECOND (get-offset-unit "second")))
  (is (= Calendar/SECOND (get-offset-unit "sec")))
  (is (= Calendar/MINUTE (get-offset-unit "2minutes")))
  (is (= Calendar/MINUTE (get-offset-unit "2minute")))
  (is (= Calendar/MINUTE (get-offset-unit "2mins")))
  (is (= Calendar/MINUTE (get-offset-unit "2min")))
  (is (= Calendar/MINUTE (get-offset-unit "a minute")))
  (is (= Calendar/MINUTE (get-offset-unit "minute")))
  (is (= Calendar/MINUTE (get-offset-unit "min")))
  (is (= Calendar/HOUR   (get-offset-unit "2hours")))
  (is (= Calendar/HOUR   (get-offset-unit "2hour")))
  (is (= Calendar/HOUR   (get-offset-unit "2hr")))
  (is (= Calendar/HOUR   (get-offset-unit "2hrs")))
  (is (= Calendar/HOUR   (get-offset-unit "a hour")))
  (is (= Calendar/HOUR   (get-offset-unit "an hour")))
  (is (= Calendar/HOUR   (get-offset-unit "hour")))
  (is (= Calendar/HOUR   (get-offset-unit "hr"))))

(deftest get-offset-value-relvals-return-correct-value
  (is (= 0 (get-offset-value "now")))
  (is (= 0 (get-offset-value "-")))
  (is (= 0 (get-offset-value ".")))
  (is (= 0 (get-offset-value "")))
  (is (= 1 (get-offset-value "tomorrow")))
  (is (= 1 (get-offset-value "tomoro")))
  (is (= 1 (get-offset-value "1day")))
  (is (= 1 (get-offset-value "1 day")))
  (is (= 1 (get-offset-value "day")))
  (is (= 1 (get-offset-value "a day")))
  (is (= 1 (get-offset-value "1days")))
  (is (= 1 (get-offset-value "days1")))
  (is (= 2 (get-offset-value "2day")))
  (is (= 2 (get-offset-value "2days")))
  (is (= 2 (get-offset-value "day2")))
  (is (= (- 7 (- Calendar/MONDAY (get-day-of-week)))
         (get-offset-value "monday")))
  (is (= (- 7 (- Calendar/MONDAY (get-day-of-week)))
         (get-offset-value "next monday")))
  (is (= 7 (get-offset-value "7days")))
  (is (= 7 (get-offset-value "week")))
  (is (= 7 (get-offset-value "a week")))
  (is (= 7 (get-offset-value "next week")))
  (is (= 14 (get-offset-value "2week")))
  (is (= 14 (get-offset-value "2weeks")))
  (is (= 1 (get-offset-value "month")))
  (is (= 1 (get-offset-value "a month")))
  (is (= 1 (get-offset-value "next month")))
  (is (= (- 12 (- Calendar/JANUARY (get-month)))
         (get-offset-value "jan")))
  (is (= (- 12 (- Calendar/JANUARY (get-month)))
         (get-offset-value "january")))
  (is (= 1 (get-offset-value "year")))
  (is (= 1 (get-offset-value "a year")))
  (is (= 1 (get-offset-value "next year")))
  (is (= (- 2020 (get-year)) (get-offset-value "2012")))
  (is (= 2 (get-offset-value "2seconds")))
  (is (= 2 (get-offset-value "2second")))
  (is (= 2 (get-offset-value "2secs")))
  (is (= 2 (get-offset-value "2sec")))
  (is (= 1 (get-offset-value "a second")))
  (is (= 1 (get-offset-value "second")))
  (is (= 1 (get-offset-value "sec")))
  (is (= 2 (get-offset-value "2minutes")))
  (is (= 2 (get-offset-value "2minute")))
  (is (= 2 (get-offset-value "2mins")))
  (is (= 2 (get-offset-value "2min")))
  (is (= 1 (get-offset-value "a minute")))
  (is (= 1 (get-offset-value "minute")))
  (is (= 1 (get-offset-value "min")))
  (is (= 2 (get-offset-value "2hours")))
  (is (= 2 (get-offset-value "2hour")))
  (is (= 2 (get-offset-value "2hr")))
  (is (= 2 (get-offset-value "2hrs")))
  (is (= 1 (get-offset-value "a hour")))
  (is (= 1 (get-offset-value "an hour")))
  (is (= 1 (get-offset-value "hour")))
  (is (= 1 (get-offset-value "hr"))))

(get-date-absvals-return-correct-date)
;(run-tests)
